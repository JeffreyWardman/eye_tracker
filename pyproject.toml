[project]
name = "eye_tracker"
version = "0.0.0"
description = ""
authors = [{ name = "Jeffrey Wardman", email = "jeffrey.wardman@yahoo.com.au" }]
readme = "README.md"

requires-python = ">=3.13,<3.14"
dependencies = [
    "dlib>=20.0.0",
    "numpy>=2.3.2",
    "opencv-python>=4.11.0.86",
    "pydantic>=2.11.7",
]

[dependency-groups]
dev = [
    "commitizen>=4.8.3",
    "deptry>=0.23.1",
    "mypy>=1.17.1",
    "pre-commit>=4.2.0",
    "ruff>=0.12.7",
]

[tool.uv]
default-groups = ["dev"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.0"
tag_format = "v$major.$minor.$patch$prerelease"
update_changelog_on_bump = true
bump_message = "bump: version $current_version â†’ $new_version"
changelog_incremental = true
annotated_tag = true
version_files = ["pyproject.toml:version"]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["eye_tracker"]

[tool.mypy]
files = ["eye_tracker"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true
exclude = [".venv"]

[tool.ruff]
target-version = "py313"
line-length = 140
fix = true
exclude = [".venv"]

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.deptry]
ignore = ["DEP002", "DEP003", "DEP004"]

# [tool.coverage.report]
# skip_empty = true

# [tool.coverage.run]
# branch = true
# source = ["eye_tracker"]
